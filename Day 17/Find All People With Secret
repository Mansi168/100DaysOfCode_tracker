class Solution {
public:
    vector<int> findAllPeople(int n, vector<vector<int>>& meetings, int firstPerson) {
        vector<int> res;
        list<pair<int,int>> adj[n];
        for(int i=0;i<meetings.size();i++){
            adj[meetings[i][0]].push_back({meetings[i][1],meetings[i][2]});
            adj[meetings[i][1]].push_back({meetings[i][0],meetings[i][2]});
        }
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        pq.push({0,0});
        pq.push({0,firstPerson});
        vector<bool> KnowsSecret(n,false);
        
        while(!pq.empty()){
            int size=pq.size();
            while(size--){
                int currTime=pq.top().first;
                int personSecret=pq.top().second;
                pq.pop();
                if(KnowsSecret[personSecret]==true){
                    continue;
                }
                KnowsSecret[personSecret]=true;
                for(auto nei: adj[personSecret]){
                    if(KnowsSecret[nei.first]==false && currTime<=nei.second){
                        pq.push({nei.second,nei.first});
                    }
                }
            }
        }
        for(int i=0;i<n;i++){
            if(KnowsSecret[i]==true){
                res.push_back(i);
            }
        }
        return res;
    }
};
